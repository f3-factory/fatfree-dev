x-php-template: &php
  restart: 'always'
  platform: linux/x86_64
  networks:
    internal:
  volumes:
    - ${DOCUMENT_ROOT}:/var/www/html:rw
    - ./docker/config/php/php.ini:/usr/local/etc/php/php.ini
    - ./docker/config/php/docker-php-ext-xdebug3.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
  environment: &php_env
    XDEBUG_MODE: debug
    XDEBUG_CONFIG: client_host=host.docker.internal
    XDEBUG_SESSION: PHPSTORM
networks:
  internal:
services:
  traefik:
    image: "traefik:v2.5"
    container_name: "${COMPOSE_PROJECT_NAME}-traefik"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:${HOST_PORT_HTTP}"
      - "--entrypoints.websecure.address=:${HOST_PORT_HTTPS}"
      - "--providers.docker.network=internal"
      - "--serversTransport.insecureSkipVerify=true"
    networks:
      - internal
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    ports:
      - "${HOST_PORT_HTTP}:80"
      - "${HOST_PORT_HTTPS}:443"
      - "${HOST_PORT_TRAEFIK}:8080"
  apache24:
    image: httpd:2.4
    platform: linux/x86_64
    container_name: '${COMPOSE_PROJECT_NAME}-apache'
    volumes:
      - ${DOCUMENT_ROOT}:/var/www/html:rw
      - ./docker/config/apache/vhosts:/usr/local/apache2/sites-enabled
      - ./docker/config/apache/httpd.conf:/usr/local/apache2/conf/httpd.conf
      - ./docker/config/apache/selfsigned.crt:/usr/local/apache2/conf/selfsigned.crt
      - ./docker/config/apache/selfsigned.key:/usr/local/apache2/conf/selfsigned.key
      - ./docker/data/logs/apache2:/var/log/apache2
    networks:
      - internal
    labels:
      - traefik.enable=true
#     php 8.2
      - traefik.http.routers.php82.rule=Host(`${COMPOSE_PROJECT_NAME}.php82.localhost`)
      - traefik.http.routers.php82.service=php82
      - traefik.http.services.php82.loadbalancer.server.port=8082
#     php 8.2
      - traefik.http.routers.php82ssl.rule=Host(`${COMPOSE_PROJECT_NAME}.php82.localhost`)
      - traefik.http.routers.php82ssl.service=php82
      - traefik.http.routers.php82ssl.entrypoints=websecure
      - traefik.http.routers.php82ssl.tls=true
      - traefik.http.services.php82ssl.loadbalancer.server.port=5082
  nginx:
    image: nginx:latest
    container_name: '${COMPOSE_PROJECT_NAME}-nginx'
    volumes:
      - ${DOCUMENT_ROOT}:/usr/share/nginx/html:rw
      - ./docker/config/nginx/vhosts/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/config/nginx/selfsigned.crt:/etc/nginx/selfsigned.crt
      - ./docker/config/nginx/selfsigned.key:/etc/nginx/selfsigned.key
      - ./docker/data/logs/nginx:/var/log/nginx
    networks:
      - internal
    labels:
      - traefik.enable=true
#     php 8.2
      - traefik.http.routers.ngx-php82.rule=Host(`${COMPOSE_PROJECT_NAME}.nginx.php82.localhost`)
      - traefik.http.routers.ngx-php82.service=php82
      - traefik.http.services.ngx-php82.loadbalancer.server.port=8082
#     php 8.2 + ssl
      - traefik.http.routers.ngx-php82ssl.rule=Host(`${COMPOSE_PROJECT_NAME}.nginx.php82.localhost`)
      - traefik.http.routers.ngx-php82ssl.service=php82
      - traefik.http.routers.ngx-php82ssl.entrypoints=websecure
      - traefik.http.routers.ngx-php82ssl.tls=true
      - traefik.http.services.ngx-php82ssl.loadbalancer.server.port=5082
  php82:
    <<: *php
    build:
      context: ./docker/bin/php82
    container_name: '${COMPOSE_PROJECT_NAME}-php82'
    hostname: f3-php82
    environment:
      <<: *php_env
      PHP_IDE_CONFIG: serverName=${COMPOSE_PROJECT_NAME}.php82.localhost
  mysql:
    image: mysql:8.0-debian
    platform: linux/x86_64
    container_name: '${COMPOSE_PROJECT_NAME}-mysql'
    hostname: f3-mysql
    restart: 'always'
    ports:
      - "${HOST_PORT_MYSQL}:${MYSQL_PORT}"
    volumes:
      - ./docker/data/mysql:/var/lib/mysql
      - ./docker/data/logs/mysql:/var/log/mysql
    command: mysqld --general-log=1 --general-log-file=/var/log/mysql/general-log.log
    networks:
      internal:
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  pgsql:
    image: postgres:latest
    container_name: '${COMPOSE_PROJECT_NAME}-pgsql'
    hostname: f3-pgsql
    restart: 'always'
    ports:
      - "${HOST_PORT_PGSQL}:${PGSQL_PORT}"
    networks:
      internal:
    environment:
      POSTGRES_DB: ${PGSQL_DATABASE}
      POSTGRES_USER: ${PGSQL_USER}
      POSTGRES_PASSWORD: ${PGSQL_PASSWORD}
  mssql:
    image: mcr.microsoft.com/mssql/server:2019-latest
    platform: linux/x86_64
    container_name: '${COMPOSE_PROJECT_NAME}-mssql'
    hostname: f3-mssql
    restart: 'always'
    networks:
      internal:
    ports:
      - "${HOST_PORT_MSSQL}:1433"
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: fatfree-root
      MSSQL_PID: Developer
  redis:
    container_name: '${COMPOSE_PROJECT_NAME}-redis'
    hostname: f3-redis
    image: redis:latest
    networks:
      internal:
    ports:
      - "${HOST_PORT_REDIS}:6379"
  memcached:
    container_name: '${COMPOSE_PROJECT_NAME}-memcached'
    hostname: f3-memcached
    image: memcached:latest
    networks:
      internal:
